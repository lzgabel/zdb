<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2021 Christopher Kujawa (zelldon91@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.zell</groupId>
        <artifactId>zdb</artifactId>
        <version>2.1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>cli</artifactId>
    <version>2.1.0-SNAPSHOT</version>
    <name>ZDB CLI</name>
    <packaging>jar</packaging>

    <properties>
        <version.picocli>4.7.5</version.picocli>
        <version.slf4j>2.0.9</version.slf4j>
        <native.maven.plugin.version>0.9.12</native.maven.plugin.version>
        <imageName>zdb</imageName>
        <mainClass>io.zell.zdb.ZeebeDebugger</mainClass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${version.picocli}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>${version.slf4j}</version>
        </dependency>

        <dependency>
            <groupId>io.zell</groupId>
            <artifactId>backend</artifactId>
            <version>2.1.0-SNAPSHOT</version>
        </dependency>


        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>info.picocli</groupId>
                                <artifactId>picocli-codegen</artifactId>
                                <version>${version.picocli}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Google code format plugin -->
            <plugin>
                <groupId>com.spotify.fmt</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <version>${plugin.version.fmt}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- CHECKSTYLE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.version.checkstyle}</version>
                <!-- dependency on build tool to reference the checkstyle cfg -->
                <dependencies>
                    <dependency>
                        <groupId>io.camunda</groupId>
                        <artifactId>zeebe-build-tools</artifactId>
                        <version>${zeebe.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>check/.checkstyle.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <encoding>UTF-8</encoding>
                    <failOnViolation>true</failOnViolation>
                    <sourceDirectories>
                        <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                        <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                    </sourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <id>validate-java</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- DISABLED FOR NOW-->
<!--                  <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-enforcer-plugin</artifactId>-->
<!--                    <executions>-->
<!--                      <execution>-->
<!--                        <id>enforce-dependency-convergence</id>-->
<!--                        <goals>-->
<!--                          <goal>enforce</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                          <rules>-->
<!--                            <dependencyConvergence />-->
<!--                          </rules>-->
<!--                        </configuration>-->
<!--                      </execution>-->
<!--                      <execution>-->
<!--                        <id>enforce-unique-dependencies</id>-->
<!--                        <goals>-->
<!--                          <goal>enforce</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                          <rules>-->
<!--                            <banDuplicatePomDependencyVersions />-->
<!--                          </rules>-->
<!--                        </configuration>-->
<!--                      </execution>-->
<!--                    </executions>-->
<!--                  </plugin>-->


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>io.zell.zdb.ZeebeDebugger</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>java-agent</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>${mainClass}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>native</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.build.directory}/${imageName}</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native.maven.plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>build-native</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>test-native</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
                <configuration>
                    <fallback>false</fallback>
                    <buildArgs>
                        <arg>-H:DashboardDump=fortune -H:+DashboardAll</arg>
                    </buildArgs>
                    <agent>
                        <enabled>true</enabled>
                        <options>
                            <option>experimental-class-loader-support</option>
                        </options>
                    </agent>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
